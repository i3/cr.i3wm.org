From d443903645a7e11d7399fdd897c0e1d0ee3eb0ec Mon Sep 17 00:00:00 2001
From: Vincent Bernat <bernat@…>
Date: Mon, 26 Aug 2013 23:39:38 +0200
Subject: [PATCH] Add `-e` option to not validate empty password.

When the XF86ScreenSaver key is used to put a laptop to sleep (or to
trigger the screensaver), the key may "bounce" on resume. This is
annoying as i3lock will try to validate several empty passwords and
wait several seconds before accepting a legit password.

Some users may want to validate an empty password: PAM may rely on
other sources to unlock the screen, like the presence of a token or
the proximity of some Bluetooth device. Hence, we don't forbid this
possibility and provide an command-line option for users not willing
to validate empty passwords.
---
 i3lock.1 |  8 ++++++++
 i3lock.c | 13 +++++++++++--
 2 files changed, 19 insertions(+), 2 deletions(-)

diff --git a/i3lock.1 b/i3lock.1
index 8bc00f5..167530b 100644
--- a/i3lock.1
+++ b/i3lock.1
@@ -27,6 +27,7 @@ i3lock \- improved screen locker
 .RB [\|\-p
 .IR pointer\|]
 .RB [\|\-u\|]
+.RB [\|\-e\|]
 
 .SH DESCRIPTION
 .B i3lock
@@ -100,6 +101,13 @@ does not hide your Mousepointer. If you specify "win",
 displays a hardcoded Windows-Pointer (thus enabling you to fuck with your
 friends by using a Screenshot of a Windows-Desktop as a locking-screen).
 
+.TP
+.B \-e, \-\-no-empty-password
+When an empty password is provided by the user, do not validate
+it. Without this option, the empty password will be provided to PAM
+and, if invalid, the user will have to wait a few seconds before
+another try.
+
 .SH SEE ALSO
 .IR xautolock(1)
 \- use i3lock as your screen saver
diff --git a/i3lock.c b/i3lock.c
index e5654d6..6cb0117 100644
--- a/i3lock.c
+++ b/i3lock.c
@@ -60,6 +60,7 @@ static struct xkb_keymap *xkb_keymap;
 
 cairo_surface_t *img = NULL;
 bool tile = false;
+bool noempty = false;
 
 /* isutf, u8_dec © 2005 Jeff Bezanson, public domain */
 #define isutf(c) (((c) & 0xC0) != 0x80)
@@ -264,9 +265,13 @@ static void handle_key_press(xcb_key_press_event_t *event) {
     n = xkb_keysym_to_utf8(ksym, buffer, sizeof(buffer));
 
     switch (ksym) {
+    case XKB_KEY_XF86ScreenSaver:
     case XKB_KEY_Return:
     case XKB_KEY_KP_Enter:
-    case XKB_KEY_XF86ScreenSaver:
+        if (noempty && input_position == 0) {
+            clear_input();
+            return;
+        }
         password[input_position] = '\0';
         unlock_state = STATE_KEY_PRESSED;
         redraw_screen();
@@ -533,13 +538,14 @@ int main(int argc, char *argv[]) {
         {"no-unlock-indicator", no_argument, NULL, 'u'},
         {"image", required_argument, NULL, 'i'},
         {"tiling", no_argument, NULL, 't'},
+        {"no-empty-password", no_argument, NULL, 'e'},
         {NULL, no_argument, NULL, 0}
     };
 
     if ((username = getenv("USER")) == NULL)
         errx(1, "USER environment variable not set, please set it.\n");
 
-    while ((o = getopt_long(argc, argv, "hvnbdc:p:ui:t", longopts, &optind)) != -1) {
+    while ((o = getopt_long(argc, argv, "hvnbdc:p:ui:te", longopts, &optind)) != -1) {
         switch (o) {
         case 'v':
             errx(EXIT_SUCCESS, "version " VERSION " © 2010-2012 Michael Stapelberg");
@@ -582,6 +588,9 @@ int main(int argc, char *argv[]) {
                 errx(1, "i3lock: Invalid pointer type given. Expected one of \"win\" or \"default\".\n");
             }
             break;
+        case 'e':
+            noempty = true;
+            break;
         case 0:
             if (strcmp(longopts[optind].name, "debug") == 0)
                 debug_mode = true;
-- 
1.8.4.rc3

