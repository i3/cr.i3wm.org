From 83bd8c95459537bfea2a04444c092bc98fd2e013 Mon Sep 17 00:00:00 2001
From: Lancelot SIX <lancelot@â€¦>
Date: Sat, 23 Nov 2013 12:03:55 +0100
Subject: [PATCH 2/3] libi3/root_atom_contents:  handle data of arbitrary
 length

Handle data fetched from xcb_get_property_unchecked with arbitrary
length. This avoids having to rely on PATH_MAX macro where it is not
necessary.
---
 libi3/root_atom_contents.c | 28 ++++++++++++++++++++++++++--
 1 file changed, 26 insertions(+), 2 deletions(-)

diff --git a/libi3/root_atom_contents.c b/libi3/root_atom_contents.c
index 236f1b9..de7994d 100644
--- a/libi3/root_atom_contents.c
+++ b/libi3/root_atom_contents.c
@@ -31,6 +31,11 @@ char *root_atom_contents(const char *atomname, xcb_connection_t *provided_conn,
     xcb_intern_atom_cookie_t atom_cookie;
     xcb_intern_atom_reply_t *atom_reply;
     char *content;
+    /* xcb_get_property_unsafe needs the size of the required property
+     * expressed in words (4 bytes). Therefore, content_max_size should always
+     * be a multiple of 4. */
+    size_t content_max_size = 1024;
+    size_t content_size;
     xcb_connection_t *conn = provided_conn;
 
     if (provided_conn == NULL &&
@@ -50,13 +55,32 @@ char *root_atom_contents(const char *atomname, xcb_connection_t *provided_conn,
     xcb_get_property_cookie_t prop_cookie;
     xcb_get_property_reply_t *prop_reply;
     prop_cookie = xcb_get_property_unchecked(conn, false, root, atom_reply->atom,
-                                             XCB_GET_PROPERTY_TYPE_ANY, 0, PATH_MAX);
+                                             XCB_GET_PROPERTY_TYPE_ANY, 0, (content_max_size / 4));
     prop_reply = xcb_get_property_reply(conn, prop_cookie, NULL);
     if (prop_reply == NULL) {
         free(atom_reply);
         return NULL;
     }
-    if (xcb_get_property_value_length(prop_reply) == 0) {
+    content_size = xcb_get_property_value_length(prop_reply);
+    if (content_size > 0 && prop_reply->bytes_after > 0) {
+        /* We received an incomplete value. Ask again but with a properly
+         * adjusted size. */
+        content_max_size += prop_reply->bytes_after;
+        if ((content_max_size % 4) != 0)
+            content_max_size += 4 - (content_max_size % 4);
+
+        /* Repeat the request, with adjusted size */
+        free(prop_reply);
+        prop_cookie = xcb_get_property_unchecked(conn, false, root, atom_reply->atom,
+                                                 XCB_GET_PROPERTY_TYPE_ANY, 0, (content_max_size / 4));
+        prop_reply = xcb_get_property_reply(conn, prop_cookie, NULL);
+        if (prop_reply == NULL) {
+            free(atom_reply);
+            return NULL;
+        }
+        content_size = xcb_get_property_value_length(prop_reply);
+    }
+    if (content_size == 0) {
         free(atom_reply);
         free(prop_reply);
         return NULL;
-- 
1.8.4.2

