From 93043ee061560a36f2875752b76311058d837ede Mon Sep 17 00:00:00 2001
From: Marcos Moyano <marcos@â€¦>
Date: Fri, 15 Mar 2013 19:09:50 -0300
Subject: [PATCH] Implement raise_focus for floating windows.

On commit 584a6b6b5951b5acd6839baae74c8306fd048fd1 raise floating windows when focusing was reverted.
This tries to solve that by introducing a new command (raise_focus) that will bring to the top of the stack the focused window (if floating). This honors keyboard focus and lets you decide if you wish to raise the window or not.
---
 include/commands.h                |  6 ++++++
 parser-specs/commands.spec        |  3 ++-
 src/commands.c                    | 17 +++++++++++++++++
 testcases/t/187-commands-parser.t |  2 +-
 4 files changed, 26 insertions(+), 2 deletions(-)

diff --git a/include/commands.h b/include/commands.h
index a517d83..5585f8a 100644
--- a/include/commands.h
+++ b/include/commands.h
@@ -265,4 +265,10 @@ void cmd_scratchpad_show(I3_CMD);
  */
 void cmd_rename_workspace(I3_CMD, char *old_name, char *new_name);
 
+/**
+ * Implementation of 'raise_focus'.
+ *
+ */
+void cmd_raise_focus(I3_CMD);
+
 #endif
diff --git a/parser-specs/commands.spec b/parser-specs/commands.spec
index a4a01a8..cc05b02 100644
--- a/parser-specs/commands.spec
+++ b/parser-specs/commands.spec
@@ -35,6 +35,7 @@ state INITIAL:
   'nop' -> NOP
   'scratchpad' -> SCRATCHPAD
   'mode' -> MODE
+  'raise_focus' -> call cmd_raise_focus()
 
 state CRITERIA:
   ctype = 'class' -> CRITERION
@@ -106,7 +107,7 @@ state WORKSPACE:
       -> call cmd_workspace_back_and_forth()
   'number'
       -> WORKSPACE_NUMBER
-  workspace = string 
+  workspace = string
       -> call cmd_workspace_name($workspace)
 
 state WORKSPACE_NUMBER:
diff --git a/src/commands.c b/src/commands.c
index 2404a81..803a580 100644
--- a/src/commands.c
+++ b/src/commands.c
@@ -1898,3 +1898,20 @@ void cmd_rename_workspace(I3_CMD, char *old_name, char *new_name) {
 
     ipc_send_event("workspace", I3_IPC_EVENT_WORKSPACE, "{\"change\":\"rename\"}");
 }
+
+/*
+ * Implementation of 'raise_focus'.
+ *
+ */
+void cmd_raise_focus(I3_CMD) {
+    DLOG("should raise the focus if the focused window is floating\n");
+    Con *floating = con_inside_floating(focused);
+
+    if (floating != NULL &&
+        floating->type == CT_FLOATING_CON) {
+      floating_raise_con(floating);
+      con_focus(con_descend_focused(floating));
+      cmd_output->needs_tree_render = true;
+    }
+      ysuccess(true);
+}
diff --git a/testcases/t/187-commands-parser.t b/testcases/t/187-commands-parser.t
index 52070d5..a5f2278 100644
--- a/testcases/t/187-commands-parser.t
+++ b/testcases/t/187-commands-parser.t
@@ -144,7 +144,7 @@ is(parser_calls("\nworkspace test"),
 ################################################################################
 
 is(parser_calls('unknown_literal'),
-   "ERROR: Expected one of these tokens: <end>, '[', 'move', 'exec', 'exit', 'restart', 'reload', 'border', 'layout', 'append_layout', 'workspace', 'focus', 'kill', 'open', 'fullscreen', 'split', 'floating', 'mark', 'resize', 'rename', 'nop', 'scratchpad', 'mode'\n" .
+   "ERROR: Expected one of these tokens: <end>, '[', 'move', 'exec', 'exit', 'restart', 'reload', 'border', 'layout', 'append_layout', 'workspace', 'focus', 'kill', 'open', 'fullscreen', 'split', 'floating', 'mark', 'resize', 'rename', 'nop', 'scratchpad', 'mode', 'raise_focus'\n" .
    "ERROR: Your command: unknown_literal\n" .
    "ERROR:               ^^^^^^^^^^^^^^^",
    'error for unknown literal ok');
-- 
1.8.2

