From 3e6fe2b162f1a81c775b0abb61d4bc2e3904195d Mon Sep 17 00:00:00 2001
From: Emil Mikulic <emikulic@â€¦>
Date: Mon, 14 Jan 2013 00:18:38 +1100
Subject: [PATCH 3/3] Support multiple times with different timezones.

---
 i3status.c         |   16 +++++-----------
 i3status.conf      |    6 +++---
 include/i3status.h |    4 ++--
 man/i3status.man   |   15 +++++++++------
 src/print_ddate.c  |    6 ++++--
 src/print_time.c   |   25 ++++++++++++++++++++-----
 6 files changed, 43 insertions(+), 29 deletions(-)

diff --git a/i3status.c b/i3status.c
index af62a7c..d37e00d 100644
--- a/i3status.c
+++ b/i3status.c
@@ -240,6 +240,7 @@ int main(int argc, char *argv[]) {
 
         cfg_opt_t time_opts[] = {
                 CFG_STR("format", "%d.%m.%Y %H:%M:%S", CFGF_NONE),
+                CFG_STR("timezone", "", CFGF_NONE),
                 CFG_END()
         };
 
@@ -291,7 +292,7 @@ int main(int argc, char *argv[]) {
                 CFG_SEC("disk", disk_opts, CFGF_TITLE | CFGF_MULTI),
                 CFG_SEC("volume", volume_opts, CFGF_TITLE | CFGF_MULTI),
                 CFG_SEC("ipv6", ipv6_opts, CFGF_NONE),
-                CFG_SEC("time", time_opts, CFGF_NONE),
+                CFG_SEC("time", time_opts, CFGF_TITLE | CFGF_MULTI),
                 CFG_SEC("ddate", ddate_opts, CFGF_NONE),
                 CFG_SEC("load", load_opts, CFGF_NONE),
                 CFG_SEC("cpu_usage", usage_opts, CFGF_NONE),
@@ -403,16 +404,9 @@ int main(int argc, char *argv[]) {
          * (!), not individual plugins, seem very unlikely. */
         char buffer[4096];
 
-        struct tm tm;
         while (1) {
                 struct timeval tv;
                 gettimeofday(&tv, NULL);
-                time_t current_time = tv.tv_sec;
-                struct tm *current_tm = NULL;
-                if (current_time != (time_t) -1) {
-                        localtime_r(&current_time, &tm);
-                        current_tm = &tm;
-                }
                 if (output_format == O_I3BAR)
                         yajl_gen_array_open(json_gen);
                 for (j = 0; j < cfg_size(cfg, "order"); j++) {
@@ -463,15 +457,15 @@ int main(int argc, char *argv[]) {
                                 SEC_CLOSE_MAP;
                         }
 
-                        CASE_SEC("time") {
+                        CASE_SEC_TITLE("time") {
                                 SEC_OPEN_MAP("time");
-                                print_time(json_gen, buffer, cfg_getstr(sec, "format"), current_tm);
+                                print_time(json_gen, buffer, cfg_getstr(sec, "format"), cfg_getstr(sec, "timezone"), tv.tv_sec);
                                 SEC_CLOSE_MAP;
                         }
 
                         CASE_SEC("ddate") {
                                 SEC_OPEN_MAP("ddate");
-                                print_ddate(json_gen, buffer, cfg_getstr(sec, "format"), current_tm);
+                                print_ddate(json_gen, buffer, cfg_getstr(sec, "format"), tv.tv_sec);
                                 SEC_CLOSE_MAP;
                         }
 
diff --git a/i3status.conf b/i3status.conf
index 49ea488..c947d87 100644
--- a/i3status.conf
+++ b/i3status.conf
@@ -19,7 +19,7 @@ order += "wireless wlan0"
 order += "ethernet eth0"
 order += "battery 0"
 order += "load"
-order += "time"
+order += "time local"
 
 wireless wlan0 {
         format_up = "W: (%quality at %essid) %ip"
@@ -44,8 +44,8 @@ run_watch VPN {
         pidfile = "/var/run/vpnc/pid"
 }
 
-time {
-        format = "%Y-%m-%d %H:%M:%S"
+time local {
+        format = "%Y-%m-%d %H:%M:%S %Z"
 }
 
 load {
diff --git a/include/i3status.h b/include/i3status.h
index 09394bd..7b84359 100644
--- a/include/i3status.h
+++ b/include/i3status.h
@@ -140,8 +140,8 @@ char *auto_detect_format();
 void print_ipv6_info(yajl_gen json_gen, char *buffer, const char *format_up, const char *format_down);
 void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format);
 void print_battery_info(yajl_gen json_gen, char *buffer, int number, const char *path, const char *format, int low_threshold, char *threshold_type, bool last_full_capacity);
-void print_time(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm);
-void print_ddate(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm);
+void print_time(yajl_gen json_gen, char *buffer, const char *format, const char *timezone, time_t t);
+void print_ddate(yajl_gen json_gen, char *buffer, const char *format, time_t t);
 const char *get_ip_addr();
 void print_wireless_info(yajl_gen json_gen, char *buffer, const char *interface, const char *format_up, const char *format_down);
 void print_run_watch(yajl_gen json_gen, char *buffer, const char *title, const char *pidfile, const char *format);
diff --git a/man/i3status.man b/man/i3status.man
index 3f7a924..fd92269 100644
--- a/man/i3status.man
+++ b/man/i3status.man
@@ -56,7 +56,7 @@ order += "ethernet eth0"
 order += "battery 0"
 order += "cpu_temperature 0"
 order += "load"
-order += "time"
+order += "time local"
 
 wireless wlan0 {
         format_up = "W: (%quality at %essid, %bitrate) %ip"
@@ -83,8 +83,8 @@ run_watch VPN {
         pidfile = "/var/run/vpnc/pid"
 }
 
-time {
-	format = "%Y-%m-%d %H:%M:%S"
+time local {
+       format = "%Y-%m-%d %H:%M:%S %Z"
 }
 
 load {
@@ -258,11 +258,14 @@ Gets the system load (number of processes waiting for CPU time in the last
 
 === Time
 
-Formats the current system time. See +strftime(3)+ for the format.
+Outputs the current time in the given timezone, or the local timezone
+by default. See +strftime(3)+ for details on the format string.
 
-*Example order*: +time+
+*Example order*: +time local+
 
-*Example format*: +%Y-%m-%d %H:%M:%S+
+*Example format*: +%Y-%m-%d %H:%M:%S %Z+
+
+*Example timezone*: +America/Los_Angeles+
 
 === DDate
 
diff --git a/src/print_ddate.c b/src/print_ddate.c
index 8213862..d180bbb 100644
--- a/src/print_ddate.c
+++ b/src/print_ddate.c
@@ -204,11 +204,13 @@ struct disc_time *get_ddate(struct tm *current_tm) {
         return &dt;
 }
 
-void print_ddate(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm) {
+void print_ddate(yajl_gen json_gen, char *buffer, const char *format, time_t t) {
         char *outwalk = buffer;
         static char *form = NULL;
+        struct tm current_tm;
         struct disc_time *dt;
-        if ((dt = get_ddate(current_tm)) == NULL)
+        localtime_r(&t, &current_tm);
+        if ((dt = get_ddate(&current_tm)) == NULL)
                 return;
         if (form == NULL)
                 if ((form = malloc(strlen(format) + 1)) == NULL)
diff --git a/src/print_time.c b/src/print_time.c
index 00a6196..c361d76 100644
--- a/src/print_time.c
+++ b/src/print_time.c
@@ -7,12 +7,27 @@
 
 #include "i3status.h"
 
-void print_time(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm) {
+void print_time(yajl_gen json_gen, char *buffer, const char *format, const char *timezone, time_t t) {
         char *outwalk = buffer;
-        if (current_tm == NULL)
-                return;
-        /* Get date & time */
-        outwalk += strftime(outwalk, 4095, format, current_tm);
+        struct tm tm;
+        if (timezone[0] == '\0') {
+                /* No timezone specified, let libc figure out local time. */
+                tzset();
+                localtime_r(&t, &tm);
+        } else {
+                /* Set TZ, calculate tm, restore TZ. */
+                char *old_tz = getenv("TZ");
+                setenv("TZ", timezone, 1);
+                tzset();
+                localtime_r(&t, &tm);
+                if (old_tz == NULL) {
+                        unsetenv("TZ");
+                } else {
+                        setenv("TZ", old_tz, 1);
+                }
+        }
+        /* Format output. */
+        outwalk += strftime(outwalk, 4095, format, &tm);
         *outwalk = '\0';
         OUTPUT_FULL_TEXT(buffer);
 }
-- 
1.7.10.4

