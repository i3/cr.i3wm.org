From 53e502b20ee600de65a0ca60f06c4889abdd4f82 Mon Sep 17 00:00:00 2001
From: Kernc <kerncece@â€¦>
Date: Sat, 15 Feb 2014 16:49:41 +0100
Subject: [PATCH] Improved detection of windows that want floating

Windows that match the following criteria are floated by default:
- dialog, utility, toolbar, or splash windows,
- modal windows, or
- windows that have specified equal minimum and maximum size.

This closes #1182.
---
 include/atoms.xmacro |  1 +
 include/xcb_compat.h |  3 +++
 src/manage.c         | 30 ++++++++++++++++++------------
 3 files changed, 22 insertions(+), 12 deletions(-)

diff --git a/include/atoms.xmacro b/include/atoms.xmacro
index e6e72e7..86c6e56 100644
--- a/include/atoms.xmacro
+++ b/include/atoms.xmacro
@@ -3,6 +3,7 @@ xmacro(_NET_SUPPORTING_WM_CHECK)
 xmacro(_NET_WM_NAME)
 xmacro(_NET_WM_STATE_FULLSCREEN)
 xmacro(_NET_WM_STATE_DEMANDS_ATTENTION)
+xmacro(_NET_WM_STATE_MODAL)
 xmacro(_NET_WM_STATE)
 xmacro(_NET_WM_WINDOW_TYPE)
 xmacro(_NET_WM_WINDOW_TYPE_DOCK)
diff --git a/include/xcb_compat.h b/include/xcb_compat.h
index 8803456..89c2c45 100644
--- a/include/xcb_compat.h
+++ b/include/xcb_compat.h
@@ -19,9 +19,12 @@
 #define XCB_ICCCM_WM_STATE_NORMAL XCB_WM_STATE_NORMAL
 #define XCB_ICCCM_WM_STATE_WITHDRAWN XCB_WM_STATE_WITHDRAWN
 #define xcb_icccm_get_wm_size_hints_from_reply xcb_get_wm_size_hints_from_reply
+#define xcb_icccm_get_wm_size_hints_reply xcb_get_wm_size_hints_reply
+#define xcb_icccm_get_wm_normal_hints xcb_get_wm_normal_hints
 #define xcb_icccm_get_wm_normal_hints_reply xcb_get_wm_normal_hints_reply
 #define xcb_icccm_get_wm_normal_hints_unchecked xcb_get_wm_normal_hints_unchecked
 #define XCB_ICCCM_SIZE_HINT_P_MIN_SIZE XCB_SIZE_HINT_P_MIN_SIZE
+#define XCB_ICCCM_SIZE_HINT_P_MAX_SIZE XCB_SIZE_HINT_P_MAX_SIZE
 #define XCB_ICCCM_SIZE_HINT_P_RESIZE_INC XCB_SIZE_HINT_P_RESIZE_INC
 #define XCB_ICCCM_SIZE_HINT_BASE_SIZE XCB_SIZE_HINT_BASE_SIZE
 #define XCB_ICCCM_SIZE_HINT_P_ASPECT XCB_SIZE_HINT_P_ASPECT
diff --git a/src/manage.c b/src/manage.c
index ae14fe6..25d3879 100644
--- a/src/manage.c
+++ b/src/manage.c
@@ -90,7 +90,7 @@ void manage_window(xcb_window_t window, xcb_get_window_attributes_cookie_t cooki
                               utf8_title_cookie, title_cookie,
                               class_cookie, leader_cookie, transient_cookie,
                               role_cookie, startup_id_cookie, wm_hints_cookie,
-                              motif_wm_hints_cookie;
+                              wm_normal_hints_cookie, motif_wm_hints_cookie;
 
 
     geomc = xcb_get_geometry(conn, d);
@@ -160,8 +160,8 @@ void manage_window(xcb_window_t window, xcb_get_window_attributes_cookie_t cooki
     role_cookie = GET_PROPERTY(A_WM_WINDOW_ROLE, 128);
     startup_id_cookie = GET_PROPERTY(A__NET_STARTUP_ID, 512);
     wm_hints_cookie = xcb_icccm_get_wm_hints(conn, window);
+    wm_normal_hints_cookie = xcb_icccm_get_wm_normal_hints(conn, window);
     motif_wm_hints_cookie = GET_PROPERTY(A__MOTIF_WM_HINTS, 5 * sizeof(uint64_t));
-    /* TODO: also get wm_normal_hints here. implement after we got rid of xcb-event */
 
     DLOG("Managing window 0x%08x\n", window);
 
@@ -197,6 +197,10 @@ void manage_window(xcb_window_t window, xcb_get_window_attributes_cookie_t cooki
     window_update_hints(cwindow, xcb_get_property_reply(conn, wm_hints_cookie, NULL), &urgency_hint);
     border_style_t motif_border_style = BS_NORMAL;
     window_update_motif_hints(cwindow, xcb_get_property_reply(conn, motif_wm_hints_cookie, NULL), &motif_border_style);
+    xcb_size_hints_t wm_size_hints;
+    xcb_icccm_get_wm_size_hints_reply(conn, wm_normal_hints_cookie, &wm_size_hints, NULL);
+    xcb_get_property_reply_t *type_reply = xcb_get_property_reply(conn, wm_type_cookie, NULL);
+    xcb_get_property_reply_t *state_reply = xcb_get_property_reply(conn, state_cookie, NULL);
 
     xcb_get_property_reply_t *startup_id_reply;
     startup_id_reply = xcb_get_property_reply(conn, startup_id_cookie, NULL);
@@ -209,8 +213,7 @@ void manage_window(xcb_window_t window, xcb_get_window_attributes_cookie_t cooki
     /* Where to start searching for a container that swallows the new one? */
     Con *search_at = croot;
 
-    xcb_get_property_reply_t *reply = xcb_get_property_reply(conn, wm_type_cookie, NULL);
-    if (xcb_reply_contains_atom(reply, A__NET_WM_WINDOW_TYPE_DOCK)) {
+    if (xcb_reply_contains_atom(type_reply, A__NET_WM_WINDOW_TYPE_DOCK)) {
         LOG("This window is of type dock\n");
         Output *output = get_output_containing(geom->x, geom->y);
         if (output != NULL) {
@@ -323,14 +326,11 @@ void manage_window(xcb_window_t window, xcb_get_window_attributes_cookie_t cooki
     if (fs == NULL)
         fs = con_get_fullscreen_con(croot, CF_GLOBAL);
 
-    xcb_get_property_reply_t *state_reply = xcb_get_property_reply(conn, state_cookie, NULL);
     if (xcb_reply_contains_atom(state_reply, A__NET_WM_STATE_FULLSCREEN)) {
         fs = NULL;
         con_toggle_fullscreen(nc, CF_OUTPUT);
     }
 
-    FREE(state_reply);
-
     bool set_focus = false;
 
     if (fs == NULL) {
@@ -365,15 +365,21 @@ void manage_window(xcb_window_t window, xcb_get_window_attributes_cookie_t cooki
 
     /* set floating if necessary */
     bool want_floating = false;
-    if (xcb_reply_contains_atom(reply, A__NET_WM_WINDOW_TYPE_DIALOG) ||
-        xcb_reply_contains_atom(reply, A__NET_WM_WINDOW_TYPE_UTILITY) ||
-        xcb_reply_contains_atom(reply, A__NET_WM_WINDOW_TYPE_TOOLBAR) ||
-        xcb_reply_contains_atom(reply, A__NET_WM_WINDOW_TYPE_SPLASH)) {
+    if (xcb_reply_contains_atom(type_reply, A__NET_WM_WINDOW_TYPE_DIALOG) ||
+        xcb_reply_contains_atom(type_reply, A__NET_WM_WINDOW_TYPE_UTILITY) ||
+        xcb_reply_contains_atom(type_reply, A__NET_WM_WINDOW_TYPE_TOOLBAR) ||
+        xcb_reply_contains_atom(type_reply, A__NET_WM_WINDOW_TYPE_SPLASH) ||
+        xcb_reply_contains_atom(state_reply, A__NET_WM_STATE_MODAL) ||
+        (wm_size_hints.flags & XCB_ICCCM_SIZE_HINT_P_MAX_SIZE &&
+         wm_size_hints.flags & XCB_ICCCM_SIZE_HINT_P_MIN_SIZE &&
+         wm_size_hints.min_height == wm_size_hints.max_height &&
+         wm_size_hints.min_width == wm_size_hints.max_width)) {
         LOG("This window is a dialog window, setting floating\n");
         want_floating = true;
     }
 
-    FREE(reply);
+    FREE(state_reply);
+    FREE(type_reply);
 
     if (cwindow->transient_for != XCB_NONE ||
         (cwindow->leader != XCB_NONE &&
-- 
1.8.5.3

